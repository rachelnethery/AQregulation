cat('hey')
print(length(keep.1))
## make table 3 ##
source('table_3.R')
## make figure 3 ##
source('figure_3.R')
library(mvtnorm)
library(dplyr)
library(splines)
library(BayesTree)
library(xtable)
library(ggplot2)
## make figure 3 ##
source('figure_3.R')
dev.off()
print('k')
rm(list=ls())
## make figure 3 ##
source('figure_3.R')
rm(list=ls())
## make figure 3 ##
source('figure_3.R')
rm(list=ls())
allest<-NULL
allub<-NULL
alllb<-NULL
for (i in 1:2){
yr1<-readLines(paste0('results_yr',i,'.txt'))
## clean the data ##
# get rid of header stuff
yr1<-yr1[-(1:(which(yr1=="All Matching Results")-1))]
# only keep elements with the word "events"
yr1<-yr1[grep('Events:',yr1)]
temp<-strsplit(x=yr1,split="[, ()]")
yr1num<-as.numeric(unlist(lapply(temp,function(x) x[-c(1,2,4)])))
## extract point estimates ##
est<-yr1num[seq(1,length(yr1num),3)]
## extract LBs ##
lb<-yr1num[seq(1,length(yr1num),3)+1]
## extract UBs ##
ub<-yr1num[seq(1,length(yr1num),3)+2]
allest<-c(allest,est)
allub<-c(allub,ub)
alllb<-c(alllb,lb)
}
disease<-factor(rep(rep(c('Mortality','Dementia','CVD'),3),2),levels=c('Mortality','Dementia','CVD'))
Method<-factor(rep(rep(c('Match','BART','PR'),each=3),2),levels=c('Match','BART','PR'))
yr<-factor(rep(c('PA-2000','PA-2001'),each=9),levels=c('PA-2000','PA-2001'))
all_results<-data.frame(allest,alllb,allub,disease,Method,yr)
## make a grid of plots from these results ##
png('figure_3.png')
ggplot(all_results,aes(x=Method,y=allest,colour=Method))+
geom_errorbar(aes(ymin=alllb,ymax=allub))+
geom_point()+
geom_hline(yintercept=0)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
text=element_text(size=18))+
facet_grid(rows=vars(disease),cols=vars(yr))
dev.off()
rm(list=ls())
## make figure 3 ##
source('figure_3.R')
rm(list=ls())
## make figure 3 ##
source('figure_3.R')
rm(list=ls())
## make figure 3 ##
source('figure_3.R')
rm(list=ls())
nboot<-50
calp<-0.1
source('functions/exmatch_trt_v2.R')
source('functions/mdmatch_conf_v2.R')
source('functions/match_rn_app_v2.R')
source('functions/match_rn_boot5.R')
## load the data for analysis ##
load('analysis_data.RData')
head(mdat[[1]])
cor(mdat[[1]][,9:13])
cor(mdat[[1]][,c(5:6,9:13)])
summary(mdat[[1]])
summary(mdat[[1]]$pmNo-mdat[[1]]$pmWith)
apply(Ecf,2,sd)*.1
apply(mdat[[1]][,7:8],2,sd)*.1
summary(mdat[[1]]$ozNo-mdat[[1]]$ozWith)
## pick off that year's dataset ##
adat<-mdat[[yr]]
## pick off that year's dataset ##
adat<-mdat[[1]]
## create separate matricies of data for the observed exposures, counterfactual exposures, and confounders ##
Eobs<-as.matrix(adat[,c('pmWith','ozWith')])
Ecf<-as.matrix(adat[,c('pmNo','ozNo')])
X<-as.matrix(adat[,grep('X',names(adat))])
Yobs<-as.matrix(adat[,2])
## fit linear model including all variables from unmatched data ##
regdat<-data.frame(Yobs,Eobs,X)
names(regdat)<-c('y','pm25','o3',paste0('conf',1:5))
regdat$pop<-1000
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+offset(log(pop)), family="poisson", data=regdat)
fit.3
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+offset(log(pop)), family="poisson", data=regdat)
fit.3
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+pm25^2+pm25*o3+pm25*o3*conf5+pm25*o3*conf4+offset(log(pop)), family="poisson", data=regdat)
fit.3
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+I(exp(conf4)/(1+exp(conf4))+pm25^2+pm25*o3+pm25*o3*conf5+pm25*o3*conf4+offset(log(pop)), family="poisson", data=regdat)
)
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+I(exp(conf4)/(1+exp(conf4)))+pm25^2+pm25*o3+pm25*o3*conf5+pm25*o3*conf4+offset(log(pop)), family="poisson", data=regdat)
fit.3
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+I(exp(conf4)/(1+exp(conf4)))+pm25^2+pm25*o3+pm25*o3*conf5+pm25*o3*conf4, family="poisson", data=regdat)
fit.3
regdat$three1<-regdat$pm25*regdat$o3*regdat$conf5
regdat$three2<-regdat$pm25*regdat$o3*regdat$conf4
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+I(exp(conf4)/(1+exp(conf4)))+pm25^2+pm25*o3+three1+three2, family="poisson", data=regdat)
fit.3
options(scipen=999)
fit.3
fit.3<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5+conf1*conf2+I(conf3^2)+I(exp(conf4)/(1+exp(conf4)))+I(pm25^2)+pm25*o3+three1+three2, family="poisson", data=regdat)
fit.3
predXi<-data.frame(Ecf,X)
names(predXi)<-c('pm25','o3',paste0('conf',1:5))
EYcf<-predict(fit.3, predXi, type="response")
predXi<-data.frame(Ecf,X,'three1'=Ecf[,1]*Ecf[,2]*X[,5],'three2'=Ecf[,1]*Ecf[,2]*X[,4])
names(predXi)
names(predXi)<-c('pm25','o3',paste0('conf',1:5),'three1','three2')
EYcf<-predict(fit.3, predXi, type="response")
sum(EYcf-Yobs)
rm(list=ls())
N<-10000
set.seed(2)
## simulate 2 factual (observed) pollutants similar to pm2.5 annual average and o3 summer average ##
Eobs<-rmvnorm(n=N,mean=c(10.5,46.9),sigma=diag(2)*c(7,37.8))
## simulate 2 counterfactual pollutants with larger mean and larger spread ##
Ecf<-Eobs+cbind(runif(n=N,min=0,max=7.08),runif(n=N,min=0,max=15))
## simulate confounders ##
betaE<-matrix(c(0.1,0.05,-0.1,-0.05,0.02,.012,-.005,-.0035,.08,-.1),nrow=5,byrow=F)
sdE<-c(0.5,0.85,1.15,1.45,1.75)
for (i in 1:5){
confi<-rnorm(n=N,mean=Eobs%*%t(betaE[i,,drop=F]),sd=sdE[i])
if (i==1){
X<-matrix(confi)
} else{
X<-cbind(X,confi)
}
}
## beta values and predictor forms ##
betaconf<-c(0.001400702, -0.0024289523,  0.0049607745, -0.0037199380,  0.00023785807,  0.0033575231,  0.0023112471, -0.0034723793)
pform.obs<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Eobs,Eobs[,1]^2,Eobs[,1]*Eobs[,2],Eobs[,1]*Eobs[,2]*X[,5],Eobs[,1]*Eobs[,2]*X[,4])
pform.cf<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Ecf,Ecf[,1]^2,Ecf[,1]*Ecf[,2],Ecf[,1]*Ecf[,2]*X[,5],Ecf[,1]*Ecf[,2]*X[,4])
sum(exp(pform.cf%*%beta)-exp(pform.obs%*%beta))
beta<-matrix(c(4.25,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
sum(exp(pform.cf%*%beta)-exp(pform.obs%*%beta))
summary(exp(pform.obs%*%beta))
sum(exp(pform.obs%*%beta)>100)
beta<-matrix(c(3,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
summary(exp(pform.obs%*%beta))
beta<-matrix(c(4.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
summary(exp(pform.obs%*%beta))
sum(exp(pform.obs%*%beta)>200)
rm(list=ls())
N<-10000
set.seed(2)
## simulate 2 factual (observed) pollutants similar to pm2.5 annual average and o3 summer average ##
Eobs<-rmvnorm(n=N,mean=c(10.5,46.9),sigma=diag(2)*c(7,37.8))
## simulate 2 counterfactual pollutants with larger mean and larger spread ##
Ecf<-Eobs+cbind(runif(n=N,min=0,max=7.08),runif(n=N,min=0,max=15))
## simulate confounders ##
betaE<-matrix(c(0.1,0.05,-0.1,-0.05,0.02,.012,-.005,-.0035,.08,-.1),nrow=5,byrow=F)
sdE<-c(0.5,0.85,1,1,1)
for (i in 1:5){
confi<-rnorm(n=N,mean=Eobs%*%t(betaE[i,,drop=F]),sd=sdE[i])
if (i==1){
X<-matrix(confi)
} else{
X<-cbind(X,confi)
}
}
cor(cbind(Eobs,X))
rm(list=ls())
N<-10000
set.seed(2)
## simulate 2 factual (observed) pollutants similar to pm2.5 annual average and o3 summer average ##
Eobs<-rmvnorm(n=N,mean=c(10.5,46.9),sigma=diag(2)*c(7,37.8))
## simulate 2 counterfactual pollutants with larger mean and larger spread ##
Ecf<-Eobs+cbind(runif(n=N,min=0,max=7.08),runif(n=N,min=0,max=15))
## simulate confounders ##
betaE<-matrix(c(0.1,0.05,-0.1,-0.05,0.02,.012,-.005,-.0035,.08,-.05),nrow=5,byrow=F)
sdE<-c(0.5,0.85,1,1,1)
for (i in 1:5){
confi<-rnorm(n=N,mean=Eobs%*%t(betaE[i,,drop=F]),sd=sdE[i])
if (i==1){
X<-matrix(confi)
} else{
X<-cbind(X,confi)
}
}
summary(X)
cor(cbind(Eobs,X))
## beta values and predictor forms ##
betaconf<-c(0.001400702, -0.0024289523,  0.0049607745, -0.0037199380,  0.00023785807,  0.0033575231,  0.0023112471, -0.0034723793)
pform.obs<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Eobs,Eobs[,1]^2,Eobs[,1]*Eobs[,2],Eobs[,1]*Eobs[,2]*X[,5],Eobs[,1]*Eobs[,2]*X[,4])
pform.cf<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Ecf,Ecf[,1]^2,Ecf[,1]*Ecf[,2],Ecf[,1]*Ecf[,2]*X[,5],Ecf[,1]*Ecf[,2]*X[,4])
beta<-matrix(c(4.25,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(3,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(3.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
beta<-matrix(c(3.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
summary(Yobs)
N<-10000
set.seed(2)
## simulate 2 factual (observed) pollutants similar to pm2.5 annual average and o3 summer average ##
Eobs<-rmvnorm(n=N,mean=c(10.5,46.9),sigma=diag(2)*c(7,37.8))
## simulate 2 counterfactual pollutants with larger mean and larger spread ##
Ecf<-Eobs+cbind(runif(n=N,min=0,max=7.08),runif(n=N,min=0,max=15))
## simulate confounders ##
betaE<-matrix(c(0.1,0.05,-0.1,-0.05,0.02,.012,-.005,-.0035,.08,-.05),nrow=5,byrow=F)
sdE<-c(0.5,0.85,1,1,1)
for (i in 1:5){
confi<-rnorm(n=N,mean=Eobs%*%t(betaE[i,,drop=F]),sd=sdE[i])
if (i==1){
X<-matrix(confi)
} else{
X<-cbind(X,confi)
}
}
## beta values and predictor forms ##
betaconf<-c(0.001400702, -0.0024289523,  0.0049607745, -0.0037199380,  0.00023785807,  -0.0033575231,  0.0023112471, -0.0034723793)
pform.obs<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Eobs,Eobs[,1]^2,Eobs[,1]*Eobs[,2],Eobs[,1]*Eobs[,2]*X[,5],Eobs[,1]*Eobs[,2]*X[,4])
pform.cf<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Ecf,Ecf[,1]^2,Ecf[,1]*Ecf[,2],Ecf[,1]*Ecf[,2]*X[,5],Ecf[,1]*Ecf[,2]*X[,4])
beta<-matrix(c(3.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(3.75,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
sum(exp(pform.cf%*%beta)-exp(pform.obs%*%beta))
beta<-matrix(c(3,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(2.75,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(2.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-cbind(Yobs,rpois(n=N,lambda=exp(pform.obs%*%beta)))
beta<-matrix(c(2.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
sum(exp(pform.cf%*%beta)-exp(pform.obs%*%beta))
beta<-matrix(c(4.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(4,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
beta<-matrix(c(4.1,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
summary(Yobs)
rm(lisls())
rm(list=ls())
N<-7000
set.seed(2)
## simulate 2 factual (observed) pollutants similar to pm2.5 annual average and o3 summer average ##
Eobs<-rmvnorm(n=N,mean=c(10.5,46.9),sigma=diag(2)*c(7,37.8))
## simulate 2 counterfactual pollutants with larger mean and larger spread ##
Ecf<-Eobs+cbind(runif(n=N,min=0,max=7.08),runif(n=N,min=0,max=15))
## simulate confounders ##
betaE<-matrix(c(0.1,0.05,-0.1,-0.05,0.02,.012,-.005,-.0035,.08,-.05),nrow=5,byrow=F)
sdE<-c(0.5,0.85,1,1,1)
for (i in 1:5){
confi<-rnorm(n=N,mean=Eobs%*%t(betaE[i,,drop=F]),sd=sdE[i])
if (i==1){
X<-matrix(confi)
} else{
X<-cbind(X,confi)
}
}
mdat<-list()
for (yr in 1:2){
## beta values and predictor forms ##
betaconf<-c(0.001400702, -0.0024289523,  0.0049607745, -0.0037199380,  0.00023785807,  -0.0033575231,  0.0023112471, -0.0034723793)
pform.obs<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Eobs,Eobs[,1]^2,Eobs[,1]*Eobs[,2],Eobs[,1]*Eobs[,2]*X[,5],Eobs[,1]*Eobs[,2]*X[,4])
pform.cf<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Ecf,Ecf[,1]^2,Ecf[,1]*Ecf[,2],Ecf[,1]*Ecf[,2]*X[,5],Ecf[,1]*Ecf[,2]*X[,4])
for (health in 1:3){
## simulate observed counts of mortality (health=1), dementia (health=2), and cvd (health=3), associated with pollutants and confounders ##
if (health==1){
beta<-matrix(c(3.75,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
} else if (health==2){
beta<-matrix(c(2.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-cbind(Yobs,rpois(n=N,lambda=exp(pform.obs%*%beta)))
} else{
beta<-matrix(c(4,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-cbind(Yobs,rpois(n=N,lambda=exp(pform.obs%*%beta)))
}
}
alldat<-data.frame(1:N,Yobs,Eobs,Ecf,X)
names(alldat)<-c('id','mort','dementia','cvd','pmWith','ozWith','pmNo','ozNo','X1','X2','X3','X4','X5')
mdat<-c(mdat,list(alldat))
}
save(mdat,file='analysis_data.RData')
set.seed(2)
rm(list=ls())
set.seed(2)
nboot<-50
calp<-0.1
source('functions/exmatch_trt_v2.R')
source('functions/mdmatch_conf_v2.R')
source('functions/match_rn_app_v2.R')
source('functions/match_rn_boot5.R')
## load the data for analysis ##
load('analysis_data.RData')
yr<-1
## pick off that year's dataset ##
adat<-mdat[[yr]]
N<-nrow(adat)
## create separate matricies of data for the observed exposures, counterfactual exposures, and confounders ##
Eobs<-as.matrix(adat[,c('pmWith','ozWith')])
Ecf<-as.matrix(adat[,c('pmNo','ozNo')])
X<-as.matrix(adat[,grep('X',names(adat))])
## omega values, tolerances for exact matching on E ##
ecut<-apply(Ecf,2,sd)*calp
xx<-matrix(ecut,nrow=nrow(Ecf),ncol=ncol(Ecf),byrow=T)
## caliper for mahalanobis distance matching on confounders ##
quan<-NULL
S_inv<-solve(cov(X))
for (j in 1:N){
temp<-matrix(rep(X[j,],N-1),nrow=N-1,byrow=T)
quan<-c(quan,quantile(sqrt(rowSums((temp-X[-j,])%*%S_inv*(temp-X[-j,]))),.1))
}
## carry out matching ##
## the matching function outputs a dataframe with columns
## trtind: the indices of the units for which we found matches for their counterfactual pollutants and their confounders
## ctlind: the indices of the matched units for the unit given in the trtind column in the same row
## note that units for which multiple matches are found will be repeated in the trtind column,
## with each row having a different ctlind value corresponding to a different matched unit
orig.matchout.1<-match_rn_app_v2(trtobs=Eobs,trtcf=Ecf,confounders=X,trtdiff=xx,mdqtl=mean(quan))
orig.matchind.1<-as.data.frame(orig.matchout.1)
names(orig.matchind.1)<-c('trtind','ctlind')
keep.1<-unique(orig.matchind.1$trtind)
pname<-c('Mortality Events','Neuro Events','CVD Events')
## bias correction and point estimates ##
allest<-NULL
## for each of the 3 health outcomes ##
for (i in 2:4){
## pick off the health outcome ##
Yobs<-as.matrix(adat[,i])
## fit regression for bias correction ##
regdat<-data.frame(Yobs,Eobs,X)
names(regdat)<-c('y','pm25','o3',paste0('conf',1:5))
fit.1<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5, family="poisson", data=regdat)
## for each CF level in matched data, use regression function to predict outcome with true confounders and with confounders of matches ##
predXi<-data.frame(Ecf[orig.matchind.1$trtind,],X[orig.matchind.1$trtind,])
predXj<-data.frame(Ecf[orig.matchind.1$trtind,],X[orig.matchind.1$ctlind,])
names(predXi)<-c('pm25','o3',paste0('conf',1:5))
names(predXj)<-c('pm25','o3',paste0('conf',1:5))
## take difference to be used for bias correction ##
diffmeans<-predict(fit.1, predXi, type="response")-predict(fit.1, predXj, type="response")
## impute counterfactuals ##
EYcf<-tapply(Yobs[orig.matchind.1$ctlind]+diffmeans,orig.matchind.1$trtind,mean)
## difference in imputed counterfactuals and observed number of deaths in each area ##
orig.est.1<-sum(EYcf-Yobs[as.numeric(names(EYcf))])
## write results to the text file ##
cat(paste0('Number of ',pname[i-1]," Prevented: ",round(orig.est.1,4),'\n'))
allest<-c(allest,orig.est.1)
}
length(keep.1)
rm(list=ls())
N<-10000
set.seed(2)
## simulate 2 factual (observed) pollutants similar to pm2.5 annual average and o3 summer average ##
Eobs<-rmvnorm(n=N,mean=c(10.5,46.9),sigma=diag(2)*c(7,37.8))
## simulate 2 counterfactual pollutants with larger mean and larger spread ##
Ecf<-Eobs+cbind(runif(n=N,min=0,max=7.08),runif(n=N,min=0,max=15))
## simulate confounders ##
betaE<-matrix(c(0.1,0.05,-0.1,-0.05,0.02,.012,-.005,-.0035,.08,-.05),nrow=5,byrow=F)
sdE<-c(0.5,0.85,1,1,1)
for (i in 1:5){
confi<-rnorm(n=N,mean=Eobs%*%t(betaE[i,,drop=F]),sd=sdE[i])
if (i==1){
X<-matrix(confi)
} else{
X<-cbind(X,confi)
}
}
mdat<-list()
for (yr in 1:2){
## beta values and predictor forms ##
betaconf<-c(0.001400702, -0.0024289523,  0.0049607745, -0.0037199380,  0.00023785807,  -0.0033575231,  0.0023112471, -0.0034723793)
pform.obs<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Eobs,Eobs[,1]^2,Eobs[,1]*Eobs[,2],Eobs[,1]*Eobs[,2]*X[,5],Eobs[,1]*Eobs[,2]*X[,4])
pform.cf<-cbind(1,X,X[,1]*X[,2],X[,3]^2,exp(X[,4])/(1+exp(X[,4])),Ecf,Ecf[,1]^2,Ecf[,1]*Ecf[,2],Ecf[,1]*Ecf[,2]*X[,5],Ecf[,1]*Ecf[,2]*X[,4])
for (health in 1:3){
## simulate observed counts of mortality (health=1), dementia (health=2), and cvd (health=3), associated with pollutants and confounders ##
if (health==1){
beta<-matrix(c(3.75,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-matrix(rpois(n=N,lambda=exp(pform.obs%*%beta)))
} else if (health==2){
beta<-matrix(c(2.5,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-cbind(Yobs,rpois(n=N,lambda=exp(pform.obs%*%beta)))
} else{
beta<-matrix(c(4,betaconf,.008,.0005,.0017,.00001,.0005,.0003),ncol=1)
Yobs<-cbind(Yobs,rpois(n=N,lambda=exp(pform.obs%*%beta)))
}
}
alldat<-data.frame(1:N,Yobs,Eobs,Ecf,X)
names(alldat)<-c('id','mort','dementia','cvd','pmWith','ozWith','pmNo','ozNo','X1','X2','X3','X4','X5')
mdat<-c(mdat,list(alldat))
}
save(mdat,file='analysis_data.RData')
set.seed(2)
nboot<-50
calp<-0.1
source('functions/exmatch_trt_v2.R')
source('functions/mdmatch_conf_v2.R')
source('functions/match_rn_app_v2.R')
source('functions/match_rn_boot5.R')
## load the data for analysis ##
load('analysis_data.RData')
rm(list=ls()])
rm(list=ls())
set.seed(2)
nboot<-50
calp<-0.1
source('functions/exmatch_trt_v2.R')
source('functions/mdmatch_conf_v2.R')
source('functions/match_rn_app_v2.R')
source('functions/match_rn_boot5.R')
## load the data for analysis ##
load('analysis_data.RData')
yr-1
yr<-1
## pick off that year's dataset ##
adat<-mdat[[yr]]
N<-nrow(adat)
## create separate matricies of data for the observed exposures, counterfactual exposures, and confounders ##
Eobs<-as.matrix(adat[,c('pmWith','ozWith')])
Ecf<-as.matrix(adat[,c('pmNo','ozNo')])
X<-as.matrix(adat[,grep('X',names(adat))])
## omega values, tolerances for exact matching on E ##
ecut<-apply(Ecf,2,sd)*calp
xx<-matrix(ecut,nrow=nrow(Ecf),ncol=ncol(Ecf),byrow=T)
## caliper for mahalanobis distance matching on confounders ##
quan<-NULL
S_inv<-solve(cov(X))
for (j in 1:N){
temp<-matrix(rep(X[j,],N-1),nrow=N-1,byrow=T)
quan<-c(quan,quantile(sqrt(rowSums((temp-X[-j,])%*%S_inv*(temp-X[-j,]))),.1))
}
orig.matchout.1<-match_rn_app_v2(trtobs=Eobs,trtcf=Ecf,confounders=X,trtdiff=xx,mdqtl=mean(quan))
orig.matchind.1<-as.data.frame(orig.matchout.1)
names(orig.matchind.1)<-c('trtind','ctlind')
keep.1<-unique(orig.matchind.1$trtind)
pname<-c('Mortality Events','Neuro Events','CVD Events')
## bias correction and point estimates ##
allest<-NULL
## for each of the 3 health outcomes ##
for (i in 2:4){
## pick off the health outcome ##
Yobs<-as.matrix(adat[,i])
## fit regression for bias correction ##
regdat<-data.frame(Yobs,Eobs,X)
names(regdat)<-c('y','pm25','o3',paste0('conf',1:5))
fit.1<-glm(y~pm25+o3+conf1+conf2+conf3+conf4+conf5, family="poisson", data=regdat)
## for each CF level in matched data, use regression function to predict outcome with true confounders and with confounders of matches ##
predXi<-data.frame(Ecf[orig.matchind.1$trtind,],X[orig.matchind.1$trtind,])
predXj<-data.frame(Ecf[orig.matchind.1$trtind,],X[orig.matchind.1$ctlind,])
names(predXi)<-c('pm25','o3',paste0('conf',1:5))
names(predXj)<-c('pm25','o3',paste0('conf',1:5))
## take difference to be used for bias correction ##
diffmeans<-predict(fit.1, predXi, type="response")-predict(fit.1, predXj, type="response")
## impute counterfactuals ##
EYcf<-tapply(Yobs[orig.matchind.1$ctlind]+diffmeans,orig.matchind.1$trtind,mean)
## difference in imputed counterfactuals and observed number of deaths in each area ##
orig.est.1<-sum(EYcf-Yobs[as.numeric(names(EYcf))])
## write results to the text file ##
cat(paste0('Number of ',pname[i-1]," Prevented: ",round(orig.est.1,4),'\n'))
allest<-c(allest,orig.est.1)
}
begin<-Sys.time()
library(mvtnorm)
library(dplyr)
library(splines)
library(BayesTree)
library(xtable)
library(ggplot2)
## create dataset ##
source('create_dataset.R')
rm(list=ls())
## run the analysis ##
source('analysis_wholeUS.R')
rm(list=ls())
## make table 3, export to file 'table_3.txt' ##
source('table_3.R')
rm(list=ls())
## make figure 3, export to file 'figure_3.pdf' ##
source('figure_3.R')
print(paste0('Run time: ',Sys.time()-begin))
begin
library(mvtnorm)
library(dplyr)
library(splines)
library(BayesTree)
library(xtable)
library(ggplot2)
## make table 2, export to file 'table_2.txt' ##
source('table_2.R')
